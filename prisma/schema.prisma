// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String    @id // Clerk user ID
  email         String    @unique
  firstName     String?
  lastName      String?
  displayName   String?   // Custom display name
  imageUrl      String?
  lastSyncedAt  DateTime  @default(now())
  messages      Message[] @relation("UserMessages")
  receivedDMs   Message[] @relation("ReceivedDMs")
  reactions     MessageReaction[]
  threads       Thread[]  @relation("ThreadParticipants")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Message {
  id        String   @id @default(uuid())
  content   String
  userId    String   
  user      User     @relation("UserMessages", fields: [userId], references: [id])
  channelId String?  // null for DMs
  channel   Channel? @relation(fields: [channelId], references: [id])
  toUserId  String?  // for DMs
  toUser    User?    @relation("ReceivedDMs", fields: [toUserId], references: [id])
  reactions MessageReaction[]
  
  // Thread relationships
  threadId      String?   // If this message is part of a thread
  thread        Thread?   @relation("ThreadMessages", fields: [threadId], references: [id])
  parentMessage Thread?   @relation("ParentMessage")
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Channel {
  id        String    @id @default(uuid())
  name      String    @unique
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model MessageReaction {
  id        String   @id @default(cuid())
  emoji     String   // The emoji character/unicode
  userId    String
  messageId String
  createdAt DateTime @default(now())

  // Relations
  user    User    @relation(fields: [userId], references: [id])
  message Message @relation(fields: [messageId], references: [id])

  // Prevent duplicate reactions from the same user on the same message with the same emoji
  @@unique([userId, messageId, emoji])
}

model Thread {
  id              String    @id @default(uuid())
  parentMessageId String    @unique
  parentMessage   Message   @relation("ParentMessage", fields: [parentMessageId], references: [id])
  messages        Message[] @relation("ThreadMessages")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  // Track participants (users who have sent messages in this thread)
  participants    User[]    @relation("ThreadParticipants")
} 